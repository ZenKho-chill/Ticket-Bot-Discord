<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Ticket #<%= ticket.identifier %></title>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css"
    />
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
      rel="stylesheet"
    />
    <style>
      :root {
        --accent-color: <%= accentColorHex %>;
        --accent-color-rgb: <%= accentColorRgb %>;
      }

      body {
        margin: 0;
        padding: 0;
        min-height: 100vh;
        background: radial-gradient(
            circle at top left,
            rgba(var(--accent-color-rgb), 0.2) 0%,
            rgba(var(--accent-color-rgb), 0.15) 50%,
            rgba(var(--accent-color-rgb), 0.1) 100%
          ),
          #0f0f13;
        color: #9ca3af;
      }

      .welcome-section {
        padding: 1.5rem 1.5rem 0;
      }

      .welcome-title {
        color: #ffffff;
        font-size: 2rem;
        font-weight: bold;
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
        gap: 1rem;
      }

      .welcome-subtitle {
        color: #9ca3af;
        font-size: 1.1rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }

      .welcome-subtitle img {
        width: 24px;
        height: 24px;
        border-radius: 50%;
      }

      .ticket-container {
        background-color: #161219;
        border-radius: 15px;
        padding: 1.5rem;
        margin-top: 1.5rem;
        border: 1px solid rgba(var(--accent-color-rgb), 0.1);
      }

      .ticket-info {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
        margin-bottom: 1.5rem;
      }

      .info-item {
        background: rgba(22, 18, 25, 0.5);
        border-radius: 10px;
        padding: 1rem;
        border: 1px solid rgba(var(--accent-color-rgb), 0.1);
      }

      .info-label {
        color: #9ca3af;
        font-size: 0.9rem;
        margin-bottom: 0.25rem;
      }

      .info-value {
        color: #ffffff;
        font-weight: 500;
      }

      .messages-container {
        margin-top: 1.5rem;
      }

      .message {
        background: rgba(22, 18, 25, 0.5);
        border-radius: 12px;
        padding: 1.25rem;
        margin-bottom: 1rem;
        border: 1px solid rgba(var(--accent-color-rgb), 0.1);
        display: flex;
        gap: 1rem;
      }

      .message-avatar {
        width: 40px;
        height: 40px;
        border-radius: 10px;
        border: 2px solid rgba(var(--accent-color-rgb), 0.3);
      }

      .message-content {
        flex: 1;
      }

      .message-header {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-bottom: 0.5rem;
      }

      .message-username {
        color: var(--accent-color);
        font-weight: 500;
      }

      .message-timestamp {
        color: #6b7280;
        font-size: 0.85rem;
      }

      .message-text {
        color: #e2e8f0;
        line-height: 1.5;
      }

      .response-section {
        display: grid;
        grid-template-columns: 1fr 300px;
        gap: 1.5rem;
        margin-top: 1.5rem;
      }

      .response-box {
        background: rgba(15, 15, 19, 0.95);
        border-radius: 12px;
        padding: 1.25rem;
        border: 1px solid rgba(var(--accent-color-rgb), 0.1);
        width: 100%;
      }

      .response-textarea {
        background-color: rgba(22, 18, 25, 0.8) !important;
        border: 1px solid rgba(var(--accent-color-rgb), 0.2) !important;
        color: #ffffff !important;
        border-radius: 8px;
        min-height: 120px;
        width: 100% !important;
        resize: vertical;
        padding: 0.75rem;
        font-size: 0.95rem;
        caret-color: #ffffff;
        display: block;
      }

      .response-textarea:focus {
        border-color: var(--accent-color) !important;
        box-shadow: 0 0 15px rgba(var(--accent-color-rgb), 0.2);
      }

      .questions-box {
        background: rgba(22, 18, 25, 0.5);
        border-radius: 12px;
        padding: 1.25rem;
        border: 1px solid rgba(var(--accent-color-rgb), 0.1);
      }

      .questions-title {
        color: #ffffff;
        font-size: 1.1rem;
        font-weight: 500;
        margin-bottom: 1rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }

      .question-item {
        margin-bottom: 1rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid rgba(var(--accent-color-rgb), 0.1);
      }

      .question-item:last-child {
        margin-bottom: 0;
        padding-bottom: 0;
        border-bottom: none;
      }

      .question-text {
        color: #9ca3af;
        font-size: 0.9rem;
        margin-bottom: 0.25rem;
      }

      .answer-text {
        color: #ffffff;
        font-weight: 500;
      }

      .close-button {
        background-color: #dc2626;
        color: #ffffff;
        border: none;
        border-radius: 8px;
        padding: 0.5rem 1rem;
        font-weight: 500;
        transition: all 0.2s;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        cursor: pointer;
      }

      .close-button:hover {
        background-color: #b91c1c;
        transform: translateY(-2px);
      }

      .send-button {
        background-color: var(--accent-color);
        color: #ffffff;
        border: none;
        border-radius: 8px;
        padding: 0.5rem 1rem;
        font-weight: 500;
        transition: all 0.2s;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        margin-top: 1rem;
        cursor: pointer;
      }

      .send-button:hover {
        opacity: 0.9;
        transform: translateY(-2px);
      }

      .embed {
        margin-top: 1rem;
        padding: 1rem;
        border-radius: 8px;
        background-color: rgba(47, 49, 54, 0.6);
        border-left: 4px solid var(--accent-color);
      }

      .attachments {
        margin-top: 1rem;
        display: grid;
        gap: 0.5rem;
      }

      .attachment-image {
        max-width: 100%;
        border-radius: 8px;
      }

      .attachment-link {
        color: var(--accent-color);
        text-decoration: underline;
      }

      @media screen and (max-width: 768px) {
        .response-section {
          grid-template-columns: 1fr;
        }
      }

      .modal-card {
        background-color: #161219;
        border-radius: 12px;
        border: 1px solid rgba(var(--accent-color-rgb), 0.1);
        max-width: 400px;
      }

      .modal-card-head {
        background-color: #1a1721;
        border-bottom: 1px solid rgba(var(--accent-color-rgb), 0.1);
        border-radius: 12px 12px 0 0;
        padding: 1rem;
      }

      .modal-card-title {
        color: #ffffff;
        font-size: 1.25rem;
        font-weight: 500;
      }

      .modal-card-body {
        background-color: #161219;
        color: #9ca3af;
        padding: 1.5rem;
        font-size: 1rem;
      }

      .modal-card-foot {
        background-color: #1a1721;
        border-top: 1px solid rgba(var(--accent-color-rgb), 0.1);
        border-radius: 0 0 12px 12px;
        padding: 1rem;
        justify-content: flex-end;
        gap: 0.75rem;
      }

      .modal-card .delete {
        background-color: rgba(255, 255, 255, 0.1);
      }

      .modal-card .delete:hover {
        background-color: rgba(255, 255, 255, 0.2);
      }

      .modal-card-foot .button {
        padding: 0.5rem 1rem;
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.2s;
        cursor: pointer;
      }

      .modal-card-foot .button.is-danger {
        background-color: #dc2626;
        color: #ffffff;
        border: none;
      }

      .modal-card-foot .button.is-danger:hover {
        background-color: #b91c1c;
        transform: translateY(-2px);
      }

      .modal-card-foot .button:not(.is-danger) {
        background-color: rgba(22, 18, 25, 0.8);
        color: #9ca3af;
        border: 1px solid rgba(var(--accent-color-rgb), 0.2);
      }

      .modal-card-foot .button:not(.is-danger):hover {
        background-color: rgba(var(--accent-color-rgb), 0.1);
        color: #ffffff;
        transform: translateY(-2px);
      }

      .inline-notice {
        margin-top: 1rem;
        opacity: 1;
        transition: opacity 0.3s ease-in-out;
      }

      .inline-notice.is-hidden {
        opacity: 0;
        pointer-events: none;
      }

      .notice-content {
        display: flex;
        align-items: center;
        gap: 12px;
        background: rgba(22, 18, 25, 0.95);
        padding: 16px;
        border-radius: 12px;
        border: 1px solid rgba(var(--accent-color-rgb), 0.2);
      }

      .notice-icon {
        color: var(--accent-color);
        font-size: 1.2rem;
        display: flex;
        align-items: center;
        justify-content: center;
        background: rgba(var(--accent-color-rgb), 0.1);
        padding: 8px;
        border-radius: 8px;
      }

      .notice-text {
        color: #ffffff;
        font-size: 0.95rem;
        flex-grow: 1;
      }

      .notice-refresh {
        background: var(--accent-color);
        color: #ffffff;
        border: none;
        padding: 6px 12px;
        border-radius: 6px;
        font-size: 0.9rem;
        display: flex;
        align-items: center;
        gap: 6px;
        cursor: pointer;
        transition: all 0.2s;
      }

      .notice-refresh:hover {
        opacity: 0.9;
        transform: translateY(-1px);
      }

      .notice-close {
        background: rgba(255, 255, 255, 0.1);
        color: #9ca3af;
        border: none;
        padding: 6px;
        border-radius: 6px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.2s;
      }

      .notice-close:hover {
        background: rgba(255, 255, 255, 0.15);
        color: #ffffff;
      }
    </style>
  </head>
  <body>
    <%- include('partials/header', { user: user }) %>

    <section class="section pt-4" style="min-height: calc(100vh - 180px)">
      <div class="container">
        <div class="welcome-section">
          <h1 class="welcome-title">Ticket #<%= ticket.identifier %></h1>
          <p class="welcome-subtitle">
            Tạo bởi <%= userInfo.username || 'Không xác định' %>
          </p>
        </div>

        <div class="ticket-container">
          <div class="ticket-info">
            <div class="info-item">
              <div class="info-label">Độ ưu tiên</div>
              <div class="info-value">
                <i
                  class="fas fa-flag"
                  style="color: <%= ticket.priority === 'High' ? '#dc2626' : 'var(--accent-color)' %>"
                ></i>
                <%= ticket.priority || 'Bình thường' %>
              </div>
            </div>
            <div class="info-item">
              <div class="info-label">Tạo lúc</div>
              <div class="info-value">
                <i class="fas fa-calendar-alt"></i>
                <%= new Date(ticket.createdAt).toLocaleString('vi', {
                dateStyle: 'medium', timeStyle: 'short' }) %>
              </div>
            </div>
            <div class="info-item">
              <div class="info-label">Phân loại</div>
              <div class="info-value">
                <i class="fas fa-folder"></i>
                <%= ticket.ticketType || 'Không xác định' %>
              </div>
            </div>
            <div class="info-item">
              <div class="info-label">Kênh</div>
              <div class="info-value">
                <i class="fas fa-hashtag"></i>
                <%= ticket.channelName || 'Không xác định' %>
              </div>
            </div>
            <div class="info-item">
              <div class="info-label">Thời gian mở</div>
              <div class="info-value">
                <i class="fas fa-clock"></i>
                <%= ticket.openDuration || 'Không xác định' %>
              </div>
            </div>
          </div>

          <button id="close-ticket" class="close-button">
            <i class="fas fa-times-circle"></i>
            Đóng ticket
          </button>

          <div id="new-message-notice" class="inline-notice is-hidden">
            <div class="notice-content">
              <div class="notice-icon">
                <i class="fas fa-bell"></i>
              </div>
              <span class="notice-text"
                >Một tin nhắn mới đã được gửi trong phiếu này</span
              >
              <button class="notice-refresh" onclick="location.reload()">
                <i class="fas fa-sync-alt"></i>
                Reload
              </button>
              <button class="notice-close" onclick="hideNotice()">
                <i class="fas fa-times"></i>
              </button>
            </div>
          </div>

          <div class="response-section">
            <div class="response-box">
              <div class="questions-title">
                <i class="fas fa-reply"></i>
                Trả lời Ticket
              </div>
              <div style="width: 100%">
                <textarea
                  id="response-input"
                  class="response-textarea"
                  placeholder="Nhập phản hồi của bạn ở đây..."
                  maxlength="1999"
                ></textarea>
                <p
                  id="char-counter"
                  style="
                    text-align: right;
                    font-size: 0.85rem;
                    color: #6b7280;
                    margin-top: 0.25rem;
                  "
                >
                  1999 ký tự còn lại
                </p>
                <button id="send-response" class="send-button">
                  <i class="fas fa-paper-plane"></i>
                  Gửi phản hồi
                </button>
              </div>
            </div>

            <div class="questions-box">
              <div class="questions-title">
                <i class="fas fa-question-circle"></i>
                Câu hỏi về ticket
              </div>
              <% if (ticket.questions && ticket.questions.length > 0) { %> <%
              ticket.questions.forEach(q => { %>
              <div class="question-item">
                <div class="question-text"><%= q.question %></div>
                <div class="answer-text"><%= q.response %></div>
              </div>
              <% }); %> <% } else { %>
              <div style="color: #6b7280; font-style: italic">
                Không có câu hỏi nào được hỏi cho ticket này.
              </div>
              <% } %>
            </div>
          </div>

          <div class="messages-container">
            <% if (messages.length > 0) { %> <% messages.forEach(msg => { %>
            <div class="message">
              <img
                src="<%= msg.avatar %>"
                alt="<%= msg.username %>"
                class="message-avatar"
              />
              <div class="message-content">
                <div class="message-header">
                  <span class="message-username"><%= msg.username %></span>
                  <span class="message-timestamp">
                    <%= new Date(msg.createdAt).toLocaleString('vi', {
                    dateStyle: 'medium', timeStyle: 'short' }) %>
                  </span>
                </div>
                <div class="message-text"><%= msg.content %></div>

                <% if (msg.attachments && msg.attachments.length > 0) { %>
                <div class="attachments">
                  <% msg.attachments.forEach(attachment => { %> <% if
                  (attachment.type && attachment.type.startsWith('image/')) { %>
                  <img
                    src="<%= attachment.url %>"
                    alt="<%= attachment.name %>"
                    class="attachment-image"
                  />
                  <% } else { %>
                  <a
                    href="<%= attachment.url %>"
                    target="_blank"
                    class="attachment-link"
                  >
                    <i class="fas fa-download"></i> <%= attachment.name %>
                  </a>
                  <% } %> <% }); %>
                </div>
                <% } %> <% if (msg.embeds && msg.embeds.length > 0) { %> <%
                msg.embeds.forEach(embed => { %>
                <div class="embed">
                  <% if (embed.title) { %>
                  <div
                    style="
                      color: #ffffff;
                      font-weight: 500;
                      margin-bottom: 0.5rem;
                    "
                  >
                    <%= embed.title %>
                  </div>
                  <% } %> <% if (embed.description) { %>
                  <div style="color: #b9bbbe"><%- embed.description %></div>
                  <% } %> <% if (embed.fields && embed.fields.length > 0) { %>
                  <% embed.fields.forEach(field => { %>
                  <div style="margin-top: 0.5rem">
                    <div style="color: #ffffff; font-weight: 500">
                      <%= field.name %>
                    </div>
                    <div style="color: #b9bbbe"><%- field.value %></div>
                  </div>
                  <% }); %> <% } %>
                </div>
                <% }); %> <% } %>
              </div>
            </div>
            <% }); %> <% } else { %>
            <div style="text-align: center; color: #6b7280; padding: 2rem">
              Không tìm thấy tin nhắn nào trong ticket này.
            </div>
            <% } %>
          </div>
        </div>
      </div>
    </section>

    <div id="close-modal" class="modal">
      <div class="modal-background"></div>
      <div class="modal-card">
        <header class="modal-card-head">
          <p class="modal-card-title">Đóng Ticket</p>
          <button class="delete" aria-label="close"></button>
        </header>
        <section class="modal-card-body">
          <p>Bạn có chắc chắn muốn đóng ticket này không??</p>
        </section>
        <footer class="modal-card-foot">
          <button id="confirm-close" class="button is-danger">
            <i class="fas fa-times-circle mr-2"></i>
            Đóng Ticket
          </button>
          <button id="cancel-close" class="button">
            <i class="fas fa-times mr-2"></i>
            Hủy
          </button>
        </footer>
      </div>
    </div>

    <%- include('partials/footer') %>

    <script>
      const closeTicketButton = document.getElementById("close-ticket");
      const closeModal = document.getElementById("close-modal");
      const confirmCloseButton = document.getElementById("confirm-close");
      const cancelCloseButton = document.getElementById("cancel-close");
      const modalCloseButton = closeModal.querySelector(".delete");

      closeTicketButton.addEventListener("click", () => {
        closeModal.classList.add("is-active");
      });

      const closeModalFn = () => closeModal.classList.remove("is-active");

      modalCloseButton.addEventListener("click", closeModalFn);
      cancelCloseButton.addEventListener("click", closeModalFn);

      confirmCloseButton.addEventListener("click", async () => {
        const ticketId = "<%= ticket.identifier %>";

        try {
          const response = await fetch(`/open-tickets/${ticketId}/close`, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
          });

          if (response.ok) {
            window.location.href = "/open-tickets";
          } else {
            const result = await response.json();
            console.error(result.error || "Failed to close the ticket.");
          }
        } catch (error) {
          console.error("Error closing ticket:", error);
        }
      });

      function showNotice() {
        const notice = document.getElementById("new-message-notice");
        notice.classList.remove("is-hidden");
      }

      function hideNotice() {
        const notice = document.getElementById("new-message-notice");
        notice.classList.add("is-hidden");
      }

      async function fetchMessages() {
        try {
          const response = await fetch(
            "/open-tickets/<%= ticket.identifier %>/messages"
          );
          if (!response.ok) {
            console.error("Failed to fetch messages:", response.statusText);
            return [];
          }
          return await response.json();
        } catch (error) {
          console.error("Error fetching messages:", error);
          return [];
        }
      }

      let lastMessageId = null;

      (async function initializeLastMessageId() {
        const messages = await fetchMessages();
        if (Array.isArray(messages) && messages.length > 0) {
          lastMessageId = messages[0].id;
        }
      })();

      setInterval(async () => {
        const messages = await fetchMessages();
        if (Array.isArray(messages) && messages.length > 0) {
          const latestMessage = messages[0];
          if (lastMessageId && latestMessage.id !== lastMessageId) {
            showNotice();
          }
          lastMessageId = latestMessage.id;
        }
      }, 10000);

      const textarea = document.getElementById("response-input");
      const charCounter = document.getElementById("char-counter");

      textarea.addEventListener("input", () => {
        const remaining = 1999 - textarea.value.length;
        charCounter.textContent = `${remaining} characters remaining`;
      });

      document
        .getElementById("send-response")
        .addEventListener("click", async () => {
          const textarea = document.getElementById("response-input");
          const sendButton = document.getElementById("send-response");
          const message = textarea.value.trim();
          const ticketId = "<%= ticket.identifier %>";

          if (!message) {
            alert("Tin nhắn không được để trống.");
            return;
          }

          sendButton.disabled = true;
          const originalButtonText = sendButton.innerHTML;
          sendButton.innerHTML =
            '<i class="fas fa-spinner fa-spin"></i> Sending...';

          try {
            const response = await fetch(`/open-tickets/${ticketId}/respond`, {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
                Accept: "application/json",
              },
              body: JSON.stringify({ message }),
            });

            const data = await response.json();

            if (response.ok) {
              textarea.value = "";

              window.location.replace(window.location.href);
            } else {
              throw new Error(data.error || "Không gửi được phản hồi");
            }
          } catch (error) {
            console.error("Error:", error);
            alert(error.message || "Đã xảy ra lỗi khi gửi phản hồi.");

            sendButton.disabled = false;
            sendButton.innerHTML = originalButtonText;
          }
        });
    </script>
  </body>
</html>
